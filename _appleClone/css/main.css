@charset 'utf-8';

/* 프로젝트 초기 셋 설정 */
html {
  font-family: "Noto Sans KR", sans-serif;
  font-size: 14px;
}
body {
  overflow-x: hidden;
  color: rgb(29, 29, 31);
  letter-spacing: -0.05em; /* 글자간 간격 */
  background: white;
}
p {
  line-height: 1.6; /* 문단 행간 간격 */
}
a {
  text-decoration: none;
  color: rgb(29, 29, 31);
}

/* ❗ 폰 가로 스크롤 방지 */
.container {
  overflow-x: hidden;
}

/* 본격적인 디자인 */
.before-load {
  overflow-y: hidden;
}
/* 🔵 global & Local Nav Layout, Design */
.global-nav {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;

  height: 44px;
  padding: 0 1rem;
  z-index: 10;
}
.local-nav {
  position: absolute;
  top: 45px;
  left: 0;
  width: 100%;
  z-index: 11;

  height: 52px;
  padding: 0 1rem;
  border-bottom: 1px solid #ddd;
}
.local-nav-sticky .local-nav {
  position: fixed;
  top: 0;
  background: rgba(255, 255, 255, 0.1);
  -webkit-backdrop-filter: saturate(180%) blur(15px); /* for iphone */
  backdrop-filter: saturate(180%) blur(15px);
}

.global-nav-links,
.local-nav-links {
  display: flex;
  align-items: center;
  max-width: 1000px;
  height: 100%;
  margin: 0 auto;
}
.global-nav-links {
  justify-content: space-between;
}

/* 같은 부모 내에, 특정 요소만 다른 CSS(현재, font-size)적용 시, CSS 우선순위 고려할 것 */
.local-nav-links a {
  font-size: 0.8em;
}
.local-nav-links .product-name {
  margin-right: auto;
  font-size: 1.5em;
  font-weight: bold;
}

/* 🔍 선택자:not(제외할 것) = 제외할 것을 제외한 나머지만 적용 */
.local-nav-links a:not(.product-name) {
  margin-left: 2em;
}

/* 🔵 section Disign */
.scroll-section {
  position: relative; /* Scene 4 의 offsetTop 값을 위해 */
  padding-top: 50vh;
}

/* 
🔍 View 구현을 할때, "Mobile First" 냐 "Desktop First" 냐는 선택의 문제
작은 화면 -> 큰 화면으로 잡아가는 것을 보편적으로 좋다고 한다. 
*/

/* 📱 Mobile */
/* 🔴 section 0 */
#scroll-section-0 h1 {
  position: relative;
  font-size: 4rem;
  text-align: center;
  z-index: 5;
  top: -10vh;
}

.main-message {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 5px 0;
  height: 3em;
  font-size: 2.5rem;
  top: 35vh;
  opacity: 0;
}

.main-message p {
  font-weight: bold;
  text-align: center;
  line-height: 1.2;
}

/* 🔴 section 1 */
.description {
  font-size: 1.2rem;
  max-width: 1000px;
  margin: 0 auto;

  padding: 0 1rem;
  color: #888;
}
/* 
🔍 rem, em 리마인드
- rem : root(html) 폰트사이즈에 대한 비율
- em : 현재 정의하고 있는 CSS 요소에 대한 폰트사이즈 기준 비율
*/
.description strong {
  float: left;
  margin-right: 0.2em;
  font-size: 3rem;
  color: rgb(29, 29, 31);
}

/* 🔴 section 2 */
.main-message small {
  display: block;
  margin-bottom: 0.5em;
  font-size: 1.3rem;
}
#scroll-section-2 .main-message {
  font-size: 3.5rem;
}
.desc-message {
  width: 50%;
  font-weight: bold;
  opacity: 0;
}
.pin {
  width: 1px;
  height: 100px;
  background: rgb(29, 29, 31);
}
#scroll-section-2 .b {
  top: 10%;
  left: 40%;
}
#scroll-section-2 .c {
  top: 15%;
  left: 45%;
}

/* 🔴 section 3 */
.mid-message {
  width: 1000px;
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem;
  font-size: 2rem;
  color: #888;
}
.mid-message strong {
  color: rgb(29, 29, 31);
}
.canvas-caption {
  max-width: 1000px;
  margin: -24rem auto 0;
  padding: 0 1rem;
  font-size: 1.2rem;
  color: #888;
}

/* 🔵 footer */
.footer {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 7rem;
  background: darkorange;
}

/* 🔍 sticky Elements */
/* 
	💡 position: fixed = 지정한 위치에 고정
	💡 position: sticky = 평소에는 static, 특정 조건하에 고정
*/
.sticky-elem {
  display: none;
  position: fixed;
  left: 0;
  width: 100%;
}

/* 🔵 canvas */
.sticky-elem-canvas {
  top: 0;
  height: 100%;
}
.sticky-elem-canvas canvas {
  position: absolute;
  top: 50%;
  left: 50%;
}
.image-blend-canvas.sticky {
  position: fixed;
  top: 0;
}
#scroll-section-3 {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#show-scene-0 #scroll-section-0 .sticky-elem,
#show-scene-1 #scroll-section-1 .sticky-elem,
#show-scene-2 #scroll-section-2 .sticky-elem,
#show-scene-3 #scroll-section-3 .sticky-elem {
  display: block;
  will-change: transform, opacity;
}
.scorll-effect-end .sticky-elem {
  display: none !important;
}

/* 🔵 로딩중 창 */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  background: white;
  opacity: 0;
  transition: 0.5s;
}

/* ❗ 스크롤 중간시점에서 새로고침이, 캔버스 시점 버그 방지 */
/* 
이유
- Scene 들 중에서, 2번째 Scene 제오하고는 전부, setLayout() 후에, 제대로 된 height 가 설정된다.
- 그리고, Canvas 애니메이션은 "스크롤이 발생할 때" 연속적으로 보여지는데, 중간지점에서 새로고침 후, 아무 동작안하면, 브라우저는 스크롤 감지 된 것이 없는 걸로 알고 있다.
- 결론은, 우리가 preload 상태인 .before-load 클래스가 존재할 때는, 아예 요소를 보여주지 않다가, load 가 전부 완료하면, setLayout 이 적용이 되었을 테니, 그 이후에 보여주는 방식 
*/
.before-load .container {
  display: none;
}
.before-load .loading {
  opacity: 1;
}

@keyframes loading-spin {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes loading-circle-ani {
  0% {
    stroke-dashoffset: 157;
  }
  75% {
    stroke-dashoffset: -147;
  }
  100% {
    stroke-dashoffset: -157;
  }
}
.loading-circle {
  width: 54px;
  height: 54px;
  animation: loading-spin 3s;
}
/* svg 전용 CSS 가 있음 */
.loading-circle circle {
  stroke: black;
  stroke-width: 4;
  /* getTotalLength() : svg 의 stroke 전체 길이를 얻어올 수 있음 */
  stroke-dasharray: 157;
  stroke-dashoffset: 0;
  fill: transparent; /* transparent : 투명하게 */
  animation: loading-circle-ani 1s infinite;
}

/* 🔵 마지막 임시 정적 컨텐츠 */
.normal-content {
  margin-bottom: 10rem;
}

/* 💻 Desktop */
@media (min-width: 1024px) {
  /* 🔴 section 0 */
  #scroll-section-0 h1 {
    font-size: 9vw;
  }
  .main-message {
    font-size: 4vw;
  }

  /* 🔴 section 1 */
  .description {
    font-size: 2rem;
    padding: 0;
  }
  .description strong {
    font-size: 6rem;
  }

  /* 🔴 section 2 */
  #scroll-section-2 .main-message {
    font-size: 6vw;
  }
  .main-message small {
    font-size: 2vw;
  }
  .desc-message {
    width: 20%;
  }
  #scroll-section-2 .b {
    top: 20%;
    left: 53%;
  }
  #scroll-section-2 .c {
    left: 55%;
  }

  /* 🔴 section 3 */
  .mid-message {
    font-size: 4vw;
    padding: 0;
  }
  .canvas-caption {
    padding: 0;
    margin-top: -8rem;
    font-size: 2rem;
  }
}
